// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import org.apache.tools.ant.taskdefs.condition.Os
apply from: "$gradle.ext.exoplayerSettingsDir/common_library_config.gradle"

android.ndkVersion = "23.2.8568313"
// Configure the native build only if ffmpeg is present to avoid gradle sync
// failures if ffmpeg hasn't been built according to the README instructions.
android.externalNativeBuild.cmake.path = 'src/main/jni/CMakeLists.txt'
// Should match cmake_minimum_required.
android.externalNativeBuild.cmake.version = '3.21.0+'

task assembleFfmpeg(type: Exec) {
    workingDir "$projectDir/src/main/jni"
    def host = ""
    if (Os.isFamily(Os.FAMILY_UNIX)) {
        host = "linux-x86_64"
    } else if (Os.isFamily(Os.FAMILY_MAC)) {
        host = "darwin-x86_64"
    } else {
        throw UnsupportedOperationException(
                "Building with Windows is not supported. " +
                        "Please use WSL or a unix-based operating system.")
    }

    def libs = new File("$workingDir/ffmpeg/android-libs")
    if (libs.exists()) {
        // Always need to execute some command for exec tasks, just do a no-op
        commandLine "true"
        return
    }

    commandLine "sh", "-c", "$workingDir/build_ffmpeg.sh $projectDir/src/main $android.ndkDirectory $host flac alac"
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(assembleFfmpeg)
}

clean {
    delete "$projectDir/src/main/jni/ffmpeg/android-libs/"
}

dependencies {
    implementation project(modulePrefix + 'library-decoder')
    // TODO(b/203752526): Remove this dependency.
    implementation project(modulePrefix + 'library-core')
    implementation 'androidx.annotation:annotation:' + androidxAnnotationVersion
    compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion
    compileOnly 'org.jetbrains.kotlin:kotlin-annotations-jvm:' + kotlinAnnotationsVersion
    testImplementation project(modulePrefix + 'testutils')
    testImplementation 'org.robolectric:robolectric:' + robolectricVersion
}

ext {
    javadocTitle = 'FFmpeg extension'
}
apply from: '../../javadoc_library.gradle'
